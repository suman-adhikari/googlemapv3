<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Title of the document</title>
</head>

<body onload="initialize();" >
 <style>
  html, body {
  height: 100%;
  padding: 10px;
}

#map-container{
   width:1200px;
   height:600px;
   margin:auto;
  
}

#map-canvas{
  height: 100%;
}
</style> 

   <div id="map-container">
      <div id="map-canvas"></div>
   </div>
  
  <!--<script src="http://maps.google.com/maps/api/js?sensor=true"></script>-->
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDq0QcBfmGJaAq5Lu1Ik57BxqRKyY93_jw&callback&max=5" async defer type="text/javascript"></script>
  <script>
	
	function initialize() {
	  
	  var mapDiv = document.getElementById('map-canvas');
	  var officeLatLng = {lat: 27.711703, lng: 85.321949};
	  var MyLatLng = {lat: 0, lng: 0};	 
	  var allMarker = new Array();
	  var mapPoints = new Array();
	  var distance=0;
	  var totalDistance=0;
	  var distanceList = new Array();
	  
	  var latlng = new Array();
	  
	  var map = new google.maps.Map(mapDiv, {
		center: new google.maps.LatLng(officeLatLng.lat, officeLatLng.lng),
		zoom: 18,
		mapTypeId: google.maps.MapTypeId.ROADMAP
	  });
	  mapPoints.push(new google.maps.LatLng(officeLatLng.lat, officeLatLng.lng))
	  var path = new google.maps.MVCArray();
      var directionsService = new google.maps.DirectionsService();	  
	  var poly = new google.maps.Polyline({ map: map, strokeColor: 'red' });
	  
	  var directionsRenderer = new google.maps.DirectionsRenderer();
	  directionsRenderer.setMap(map);
	  
	   directionsRenderer.setOptions({
        draggable: true
       });
	   	   
	   var latlngList = ["27.67524793041928:85.35343497991562",
						"27.673523413312136:85.38009345531464",
						"27.6696562153866:85.41152358055115",
						"27.666473038237093:85.43665587902069",
						"27.700665958978043:85.32367318868637",
						"27.699388311104332:85.32867282629013",
						"27.693156594831198:85.32757848501205",
						"27.690316106117262:85.33592015504837",
						"27.673471154793035:85.43828263878822"
						]
	   
	   
	   latlngList.forEach(function(item) {
           var lat = item.split(':')[0];
		   var lng = item.split(':')[1]
		   var latLng = new google.maps.LatLng(lat,lng)
		   mapPoints.push(latLng);
        });
		
		getRoutePointsAndWaypoints();
		
	  
	  AddMarker(officeLatLng.lat, officeLatLng.lng);	 
	  
	  function AddMarker(lat,lng){
	     var latLng = new google.maps.LatLng(lat,lng)		 
		 var mark = new google.maps.Marker({
			position: latLng,
			map: map,
			title: 'Home',
			description:'Home'
		  });
		  allMarker.push(mark);		 		  
	  }

	  map.addListener('clickOne', function(args) {  
		 //AddMarker(args.latLng.lat(),args.latLng.lng());
		  debugger;
		  mapPoints.push(args.latLng);
		  latlng.push(args.latLng.lat() + ":" + args.latLng.lng());
		  //CalculateDistance();
		  //push ofc as distination
		  //mapPoints.push(new google.maps.LatLng(officeLatLng.lat, officeLatLng.lng));
		  getRoutePointsAndWaypoints();
      });
	  
	  function CalculateDistance(){	     
		 _request = {
					origin: mapPoints[mapPoints.length-2],
					destination: mapPoints[mapPoints.length-1],
					travelMode: google.maps.DirectionsTravelMode.DRIVING
				};
				
         directionsService.route(_request, function (_response, _status) {
			   
				if (_status == google.maps.DirectionsStatus.OK) {					
					distance = (_response.routes[0].legs[0].distance.value)/1000;
					totalDistance +=distance;
					distanceList.push(distance);
				}
			});		
		
	  }
	  
    function getRoutePointsAndWaypoints() {
       
		var waypoints = new Array();
	 
		if (mapPoints.length > 2) 
		{
			for (var j = 1; j < mapPoints.length - 1; j++) {
				var address = mapPoints[j];
				if (address !== "") {
					waypoints.push({
						location: address,
						stopover: true  //stopover is used to show marker on map for waypoints
					});
				}
			}
			//Call a drawRoute() function
			drawRoute(mapPoints[0], mapPoints[mapPoints.length - 1], waypoints);
		} else if (mapPoints.length > 1) {
			//Call a drawRoute() function only for start and end locations
			drawRoute(mapPoints[mapPoints.length - 2], mapPoints[mapPoints.length - 1], waypoints);
		} 
    }
	  
		function drawRoute(originAddress, destinationAddress, _waypoints) {
			
			var _request = '';
		 
			//This is for more then two locatins
			if (_waypoints.length > 0) {
			
				_request = {
				    
					origin: originAddress,
					destination: destinationAddress,
					waypoints: _waypoints,
					optimizeWaypoints: true, //set to true to determine the shortest route
					travelMode: google.maps.DirectionsTravelMode.DRIVING										
				}; 
			} else {
				//This is for one or two locations. Here noway point is used.
				_request = {
					origin: originAddress,
					destination: destinationAddress,
					travelMode: google.maps.DirectionsTravelMode.DRIVING
				};
			}
		 
			//This will take the request and draw the route and return response and status as output
			directionsService.route(_request, function (_response, _status) {
			    
				if (_status == google.maps.DirectionsStatus.OK) {
					directionsRenderer.setDirections(_response);
					
					var legs = _response.routes[0].legs;
					var totalDuration=0;
					for(var i=0; i<legs.length; ++i) {
							totalDistance += legs[i].distance.value;
							totalDuration += legs[i].duration.value;
						}
					
					//distance = (_response.routes[0].legs[0].distance.value)/1000;
					//totalDistance +=distance;
					
					alert( (totalDistance/1000) + "KM : Duration: " +(totalDuration/60));
					
				}
			});						
		}
     	
	}
	
	
    	
  </script>
</body>

</html>